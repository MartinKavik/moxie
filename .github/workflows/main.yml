on: push
jobs:
  core:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master
    - run: cargo test-core

  dom:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master
    - run: rustup target add wasm32-unknown-unknown
    - run: cargo build-dom-lib

    - name: build dom examples
      if: runner.os == 'Linux'
      run: |
        cargo build-dom-hacking
        cargo build-dom-todo

    - name: upload dom examples
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@master
      with:
        name: dom-examples
        path: dom/examples

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: rustup component add rustfmt
    - run: cargo fmt -- --check
    # FIXME https://github.com/anp/moxie/issues/27
    # - run: cargo fmt-ofl -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: rustup component add clippy
    - run: cargo clippy-core
    - run: cargo clippy-dom

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: cargo docs-all
    - run: cargo docs-ofl
    - uses: actions/upload-artifact@master
      with:
        name: docs
        path: target/doc

  website:
    needs: [core, dom, fmt, clippy, docs]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        path: main

    - name: download dom examples
      uses: actions/download-artifact@master
      with:
        name: dom-examples
        path: main/dom/examples

    - name: download docs
      uses: actions/download-artifact@master
      with:
        name: docs
        path: main/target/doc

    - name: build website
      run: cargo ofl website build target/website

    - name: make archive
      uses: actions/upload-artifact@master
      with:
        name: website
        path: target/website

  published:
    needs: [website]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: ensure crates published
      if: github.ref == 'refs/heads/master'
      run: |
        cargo login ${{ secrets.CARGO_API_TOKEN }}
        cargo ofl published

    - name: checkout gh-pages branch
      uses: actions/checkout@master
      with:
        ref: gh-pages

    - name: prepare repo for unpacking website
      run: |
        git rm -rf .
        git clean -fxd

    - name: download website
      uses: actions/download-artifact@master
      with:
        name: website

    - name: commit website updates
      run: |
        git config --global user.name "docs builder"
        git config --global user.email "adam.n.perry+moxie@gmail.com"
        git add --all .
        git commit -m $GITHUB_SHA

    - name: push website
      if: github.ref == 'refs/heads/master'
      run: git push origin gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
